df$stnd_centrality = standardize(df$centrality)
df$stnd_contributions = standardize(df$contributions)
df$contributions <- as.numeric(df$contributions)
cent_v_df <- df %>% ggplot(aes(x=centrality,y = contributions, color=member)) + geom_point()
dist_cent <- df %>% ggplot(aes(x=member,y = log10(centrality)) )+ geom_boxplot()
dist_cont <- df %>% ggplot(aes(x=member,y = log10(contributions))) + geom_boxplot()
grid.arrange(cent_v_df,dist_cont,dist_cent,nrow=3)
#figuret out better layout
return(df)
}
facebook <- standard_summary(facebook)
standard_summary <- function(df){
print(str(df))
#In future, iterate through different measures
#Standardize measures and contributions
# for (measure in measures){
#  print(measure)
# df["strd_" + str(measure)] <- standardize(df[measure])
#}
df$member <- as.logical(df$member)
df$stnd_centrality = standardize(df$centrality)
df$stnd_contributions = standardize(df$contributions)
df$contributions <- as.numeric(df$contributions)
cent_v_df <- df %>% ggplot(aes(x=centrality,y = contributions, color=member)) + geom_point()
dist_cent <- df %>% ggplot(aes(x=member,y = centrality) )+ geom_boxplot()
dist_cont <- df %>% ggplot(aes(x=member,y = contributions)) + geom_boxplot()
grid.arrange(cent_v_df,dist_cont,dist_cent,nrow=3)
#figuret out better layout
return(df)
}
facebook <- standard_summary(facebook)
standard_summary <- function(df){
print(str(df))
#In future, iterate through different measures
#Standardize measures and contributions
# for (measure in measures){
#  print(measure)
# df["strd_" + str(measure)] <- standardize(df[measure])
#}
df$member <- as.logical(df$member)
df$stnd_centrality = standardize(df$centrality)
df$stnd_contributions = standardize(df$contributions)
df$contributions <- as.numeric(df$contributions)
cent_v_df <- df %>% ggplot(aes(x=centrality,y = contributions, color=member)) + geom_point()
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) )+ geom_boxplot()
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) + geom_boxplot()
grid.arrange(cent_v_df,dist_cont,dist_cent,nrow=3)
#figuret out better layout
return(df)
}
facebook <- standard_summary(facebook)
tensorflow <- standard_summary(tensorflow)
ook)
#exclude gardener
tensorflow <- filter(tensorflow, contributions < 30000)
tensorflow <- standard_summary(tensorflow)
facebook_raw <- read.csv("facebook_raw.csv")
View(facebook_raw)
facebook_raw %>% group_by(repo) %>% summarise(members = count())
facebook_raw %>% group_by(repo) %>% summarise(members = n())
counts <- facebook_raw %>% group_by(repo) %>% summarise(members = n())
View(counts)
counts <- facebook_raw %>% group_by(repo) %>% summarise(members = n())
summary(counts)
counts_t <- tensorc %>% group_by(repo) %>% summarise(members = n())
summary(counts_t)
counts_t <- tensorc %>% group_by(repo) %>% summarise(members = n())
tensorc <- read.csv("tensorflow_raw.csv")
counts_t <- tensorc %>% group_by(repo) %>% summarise(members = n())
summary(counts_t)
View(counts_t)
library(tidyverse)
facebook_raw <- read.csv("facebook_raw.csv")
tensorflow_raw <- read.csv("tensorflow_raw.csv")
summary(facebook_raw %>% group_by(repo) %>% summarise(members = n()))
summary(tensorflow_raw %>% group_by(repo) %>% summarise(members = n()))
View(tensorc)
View(counts_t)
full_df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) )+ geom_boxplot() + facet_wrap(~org)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
facebook <- read.csv("Facebook_final.csv")
tensorflow <- read.csv("Tensorflow_final.csv")
facebook$org <- "facebook"
tensorflow$org<- "tensorflow"
full <- rbind(facebook,tensorflow)
####cleaning and conversion ####
col_nums <- c("totalRepositoriesWithContributedIssues",
"totalCommitContributions",
"totalIssueContributions",
"totalRepositoriesWithContributedCommits",
"totalPullRequestReviewContributions"
)
full[col_nums] <- sapply(full[col_nums],as.numeric)
standard_summary <- function(df){
cent_v_df <- df %>% ggplot(aes(x=centrality,y = contributions, color=member)) + geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) +
geom_boxplot() + facet_wrap(~org)
grid.arrange(cent_v_df,dist_cont,dist_cent,nrow=3)
}
standard_summary(full)
(facebook %>% group_by(member,org) %>% summary()
(facebook %>% group_by(member,org) %>% summary())
a = (facebook %>% group_by(member,org) %>% summary())
(facebook %>% group_by(member,org) %>% summary())
(ful %>% group_by(member,org) %>% summary())
(full %>% group_by(member,org) %>% summary())
(full %>% group_by(org) %>% summary())
standard_summary <- function(df){
cent_v_df <- df %>% ggplot(aes(x=centrality,y = contributions, color=member)) + geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) +
geom_boxplot() + facet_wrap(~org)
cent_v_df
grid.arrange(dist_cont,dist_cent,nrow = 2)
}
standard_summary(full)
#(full %>% group_by(org) %>% summary())
#filter out gardener
full <- fiull %>% filter(contributions < 3000)
#filter out gardener
full <- full %>% filter(contributions < 3000)
standard_summary <- function(df){
cent_v_df <- df %>% ggplot(aes(x=centrality,y = contributions, color=member)) + geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
grid.arrange(dist_cont,dist_cent,nrow = 2)
}
standard_summary(full)
#(full %>% group_by(org) %>% summary())
standard_summary <- function(df){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=centrality,y = log(contributions), color=member)) +
geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
grid.arrange(dist_cont,dist_cent,nrow = 2)
}
standard_summary(full)
#(full %>% group_by(org) %>% summary())
standard_summary <- function(df){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=log(centrality),y = log(contributions), color=member)) +
geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
grid.arrange(dist_cont,dist_cent,nrow = 2)
}
standard_summary(full)
#(full %>% group_by(org) %>% summary())
standard_summary(full,centrality,contributions)
standard_summary <- function(df,measure_1,measure_2){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=log(measure_1),y = log(measure_2), color=member)) +
geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(measure_1)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(measure_1))) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
grid.arrange(dist_cont,dist_cent,nrow = 2)
}
standard_summary(full,centrality,contributions)
standard_summary(full,"centrality","contributions")
standard_summary <- function(df){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=log(centrality),y = log(contributions), color=member)) +
geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
grid.arrange(dist_cont,dist_cent,nrow = 2)
}
standard_summary(full)
#(full %>% group_by(org) %>% summary())
View(full)
aws <- read.csv("aws_final.csv")
View(aws)
facebook <- read.csv("Facebook_final.csv")
tensorflow <- read.csv("Tensorflow_final.csv")
r_studio <- read.csv("rstudio_final.csv")
aws <- read.csv("aws_final.csv")
facebook$org <- "facebook"
tensorflow$org<- "tensorflow"
r_studio$org <- "rstudio"
aws$org <- "aws"
full <- rbind(facebook,tensorflow,r_studio,aws)
```{r summarize}
standard_summary <- function(df){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=log(centrality),y = log(contributions), color=member)) +
geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
grid.arrange(dist_cont,dist_cent,nrow = 2)
}
standard_summary(full)
library(tidyverse)
standard_summary <- function(df){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=log(centrality),y = log(contributions), color=member)) +
geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
grid.arrange(dist_cont,dist_cent,nrow = 2)
}
standard_summary(full)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gridExtra)
#Should save these in a file and iterate
facebook <- read.csv("Facebook_final.csv")
tensorflow <- read.csv("Tensorflow_final.csv")
r_studio <- read.csv("rstudio_final.csv")
aws <- read.csv("aws_final.csv")
facebook$org <- "facebook"
tensorflow$org<- "tensorflow"
r_studio$org <- "rstudio"
aws$org <- "aws"
full <- rbind(facebook,tensorflow,r_studio,aws)
####cleaning and conversion ####
#redundant for a couple, but this can be called later
col_nums <- c("totalRepositoriesWithContributedIssues",
"totalCommitContributions",
"totalIssueContributions",
"totalRepositoriesWithContributedCommits",
"totalPullRequestReviewContributions",
"centrality",
"contributions")
full[col_nums] <- sapply(full[col_nums],as.numeric)
#filter out gardener
full <- full %>% filter(contributions < 3000)
standard_summary <- function(df){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=log(centrality),y = log(contributions), color=member)) +
geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
grid.arrange(dist_cont,dist_cent,nrow = 2)
}
standard_summary(full)
#(full %>% group_by(org) %>% summary())
#filter out gardener,
#add conditions and other cleaning here
full <- full %>% filter(contributions < 3000 & centrality > .00001)
#filter out gardener,
#add conditions and other cleaning here
full <- full %>% filter(contributions < 3000 & centrality > .0001)
#filter out gardener,
#add conditions and other cleaning here
full <- full %>% filter(contributions < 3000 & centrality > .001)
#filter out gardener,
#add conditions and other cleaning here
full <- full %>% filter(contributions < 3000 & centrality > .0001)
full <- rbind(facebook,tensorflow,r_studio,aws)
#filter out gardener,
#add conditions and other cleaning here
full <- full %>% filter(contributions < 3000 & centrality > median(centrality))
standard_summary(full)
#filter out gardener,
#add conditions and other cleaning here
full <- full %>% filter(contributions < 3000 & centrality > median(centrality) & contributions > median(contributions))
standard_summary(full)
full <- rbind(facebook,tensorflow,r_studio,aws)
full <- full %>% filter(contributions < 3000 & centrality) %>% group_by(org) %>%
filter(centrality> median(centrality) & contributions > median(contributions)) %>%
ungroup()
standard_summary(full)
full <- rbind(facebook,tensorflow,r_studio,aws)
#filter out gardener,
#add conditions and other cleaning here
#filter(centrality> median(centrality) & contributions > median(contributions)) %>%
full <- full %>% filter(contributions < 3000 & centrality) %>% group_by(org) %>%
ungroup()
standard_summary <- function(df){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=log(centrality),y = log(contributions), color=member)) +
geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
print(dist_cont)
print(dist_cent)
}
standard_summary(full
print(cent_v_df)
standard_summary <- function(df){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=log(centrality),y = log(contributions), color=member)) +
geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = log10(centrality)) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = log10(contributions))) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
print(dist_cont)
print(dist_cent)
}
standard_summary(full)
#(full %>% group_by(org) %>% summary())
quantile_summaries <- function(df){
#In the future, make this more flexible, specify columns
df$cont_deciles <- ntile(df["contributions"],10)
df$cent_deciles <- ntile(df["centrality"],10)
#Facet Wrap membershup?
cont_g <- df %>% ggplot(aes(x=as.factor(cont_deciles),y=log10(contributions))) + geom_boxplot() +facet_wrap(~member)+ ggtitle(df$org)
cent_g <- df %>% ggplot(aes(x=as.factor(cent_deciles),y=log10(centrality))) + geom_boxplot()+facet_wrap(~member)
grid.arrange(cent_g,cont_g,nrow=2)
#q_q <- df %>% ggplot()
}
df %>% group_by(org) %>% quantile_summaries()
quantile_summaries <- function(df){
#In the future, make this more flexible, specify columns
df$cont_deciles <- ntile(df["contributions"],10)
df$cent_deciles <- ntile(df["centrality"],10)
#Facet Wrap membershup?
cont_g <- df %>% ggplot(aes(x=as.factor(cont_deciles),y=log10(contributions))) + geom_boxplot() +facet_wrap(~member + org)
cent_g <- df %>% ggplot(aes(x=as.factor(cent_deciles),y=log10(centrality))) + geom_boxplot()+facet_wrap(~member + org)
print(cont_g)
print(cent_g)
#q_q <- df %>% ggplot()
}
quantile_summaries(full)
quantile_summaries(full,"contributions","centrality")
quantile_summaries <- function(df,metric_1, metric_2){
#In the future, make this more flexible, specify columns
df$cont_deciles <- ntile(df[metric_1],10)
df$cent_deciles <- ntile(df[metric_2],10)
#Facet Wrap membershup?
cont_g <- df %>% ggplot(aes(x=as.factor(cont_deciles),y=df[metric_1])) + geom_boxplot() +facet_wrap(~member + org)
cent_g <- df %>% ggplot(aes(x=as.factor(cent_deciles),y=df[metric_2])) + geom_boxplot()+facet_wrap(~member + org)
print(cont_g)
print(cent_g)
#q_q <- df %>% ggplot()
}
quantile_summaries(full,"contributions","centrality")
a = "contributions"
b <- full[a]
class(b)
quantile_summaries <- function(df,metric_1, metric_2){
#In the future, make this more flexible, specify columns
df <- as.data.frame(df)
df$cont_deciles <- ntile(df[metric_1],10)
df$cent_deciles <- ntile(df[metric_2],10)
#Facet Wrap membershup?
cont_g <- df %>% ggplot(aes(x=as.factor(cont_deciles),y=df[metric_1])) + geom_boxplot() +facet_wrap(~member + org)
cent_g <- df %>% ggplot(aes(x=as.factor(cent_deciles),y=df[metric_2])) + geom_boxplot()+facet_wrap(~member + org)
print(cont_g)
print(cent_g)
#q_q <- df %>% ggplot()
}
quantile_summaries(full,"contributions","centrality")
quantile_summaries <- function(df,metric_1, metric_2){
#In the future, make this more flexible, specify columns
df <- as.data.frame(df)
df$cont_deciles <- ntile(df[metric_1],10)
df$cent_deciles <- ntile(df[metric_2],10)
#Facet Wrap membershup?
cont_g <- df %>% ggplot(aes(x=as.factor(cont_deciles),y=log(df[metric_1]))) + geom_boxplot() +facet_wrap(~member + org)
cent_g <- df %>% ggplot(aes(x=as.factor(cent_deciles),y=df[metric_2])) + geom_boxplot()+facet_wrap(~member + org)
print(cont_g)
print(cent_g)
#q_q <- df %>% ggplot()
}
quantile_summaries(full,"contributions","centrality")
quantile_summaries(facebook,"contributions","centrality")
quantile_summaries <- function(df,metric_1, metric_2){
#In the future, make this more flexible, specify columns
df <- as.data.frame(df)
a <- df[metric_1]
df$cont_deciles <- ntile(a,10)
df$cent_deciles <- ntile(df[metric_2],10)
#Facet Wrap membershup?
cont_g <- df %>% ggplot(aes(x=as.factor(cont_deciles),y=log(a))) + geom_boxplot() +facet_wrap(~member)
cent_g <- df %>% ggplot(aes(x=as.factor(cent_deciles),y=df[metric_2])) + geom_boxplot()+facet_wrap(~member)
print(cont_g)
print(cent_g)
#q_q <- df %>% ggplot()
}
quantile_summaries(facebook,"contributions","centrality")
quantile_summaries <- function(df){
#In the future, make this more flexible, specify columns
df$cont_deciles <- ntile(df["contributions"],10)
df$cent_deciles <- ntile(df["centrality"],10)
#Facet Wrap membershup?
cont_g <- df %>% ggplot(aes(x=as.factor(cont_deciles),y=log10(contributions))) + geom_boxplot() +facet_wrap(~member)+ ggtitle(df$org)
cent_g <- df %>% ggplot(aes(x=as.factor(cent_deciles),y=log10(centrality))) + geom_boxplot()+facet_wrap(~member)
grid.arrange(cent_g,cont_g,nrow=2)
#q_q <- df %>% ggplot()
}
quantile_summaries(facebook)
quantile_summaries <- function(df,metric_1, metric_2){
#In the future, make this more flexible, specify columns
df <- as.data.frame(df)
a <- df[metric_1]
df$cont_deciles <- ntile(a,10)
df$cent_deciles <- ntile(df[metric_2],10)
#Facet Wrap membershup?
cont_g <- df %>% ggplot(aes(x=as.factor(cont_deciles),y=log(a))) + geom_boxplot() +facet_wrap(~member)
cent_g <- df %>% ggplot(aes(x=as.factor(cent_deciles),y=df[metric_2])) + geom_boxplot()+facet_wrap(~member)
print(cont_g)
print(cent_g)
#q_q <- df %>% ggplot()
}
f <- df %>% filter(org == "facebook")
f <- filter(df,org == "facebook")
f <- filter(df,org == "facebook")
f <- filter(full,org == "facebook")
quantile_summaries(f,"contributions","centrality")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gridExtra)
#Should save these in a file and iterate
facebook <- read.csv("Facebook_final.csv")
tensorflow <- read.csv("Tensorflow_final.csv")
r_studio <- read.csv("rstudio_final.csv")
aws <- read.csv("aws_final.csv")
facebook$org <- "facebook"
tensorflow$org<- "tensorflow"
r_studio$org <- "rstudio"
aws$org <- "aws"
full <- rbind(facebook,tensorflow,r_studio,aws)
####cleaning and conversion ####
#redundant for a couple, but this can be called later
col_nums <- c("totalRepositoriesWithContributedIssues",
"totalCommitContributions",
"totalIssueContributions",
"totalRepositoriesWithContributedCommits",
"totalPullRequestReviewContributions",
"centrality",
"contributions")
full[col_nums] <- sapply(full[col_nums],as.numeric)
#filter out gardener,
#add conditions and other cleaning here
#filter(centrality> median(centrality) & contributions > median(contributions)) %>% group_by(org) %>%
#ungroup()
full <- full %>% filter(contributions < 3000 & centrality)
w_location <- full %>% filter(is.na(location) == F & as.character(location) != "" & as.character(location) != "[]" )
counts <- w_location %>% group_by(org,location,member) %>% summarise(n = n(), mn.centrality = mean(centrality))
for(orga in unique(counts$org)){
print(orga)
print(head(counts %>% filter(orga == org) %>% arrange(desc(n))),n=15)
}
w_location <- full %>% filter(is.na(location) == F & as.character(location) != "" & as.character(location) != "[]" )
counts <- w_location %>% group_by(org,location,member) %>% summarise(n = n(), mdn.centrality = median(centrality))
for(orga in unique(counts$org)){
print(orga)
print(head(counts %>% filter(orga == org) %>% arrange(desc(n))),n=15)
}
standard_summary <- function(df){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=log(centrality),y = ftotalCommitContributions, color=member)) +  geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = ftotalCommitContributions) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = ftotalCommitContributions)) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
print(dist_cont)
print(dist_cent)
}
standard_summary(full)
standard_summary <- function(df){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=log(centrality),y = totalCommitContributions, color=member)) +  geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = totalCommitContributions) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = totalCommitContributions)) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
print(dist_cont)
print(dist_cent)
}
standard_summary(full)
#(full %>% group_by(org) %>% summary())
full %>% filter(org = "facebook") %>% group_by(member) %>% summarise(mn = mean(totalCommitContributions))
full %>% filter(org == "facebook") %>% group_by(member) %>% summarise(mn = mean(totalCommitContributions))
facebook <- read.csv("Facebook_final.csv")
tensorflow <- read.csv("Tensorflow_final.csv")
r_studio <- read.csv("rstudio_final.csv")
aws <- read.csv("aws_final.csv")
facebook$org <- "facebook"
tensorflow$org<- "tensorflow"
r_studio$org <- "rstudio"
aws$org <- "aws"
full <- rbind(facebook,tensorflow,r_studio,aws)
standard_summary <- function(df){
cent_v_df <- df %>%  filter(centrality > 0) %>% ggplot(aes(x=log(centrality),y = totalPullRequestReviewContributions, color=member)) +  geom_point() + facet_wrap(~org)
dist_cent <- df %>% filter(centrality > 0) %>% ggplot(aes(x=member,y = totalPullRequestReviewContributions) ) +
geom_boxplot() + facet_wrap(~org)
dist_cont <- df %>% filter(centrality > 0) %>%ggplot(aes(x=member,y = totalPullRequestReviewContributions)) +
geom_boxplot() + facet_wrap(~org)
print(cent_v_df)
print(dist_cont)
print(dist_cent)
}
standard_summary(full)
#(full %>% group_by(org) %>% summary())
View(facebook_raw)
